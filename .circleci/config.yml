# Stacks detected: deps:node:.,test:jest:
version: 2.1
orbs:
  node: circleci/node@5
  aws-ecr: circleci/aws-ecr@9.0.2
  aws-cli: circleci/aws-cli@4.1.2
jobs:
  test:
    # Install node dependencies and run tests
    executor: node/default
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm install jest-junit
      - run:
          name: Run tests
          command: npm test -- --coverage --forceExit
      - store_test_results:
          path: ./test-results/
  build-push:
    # building image
    executor: aws-cli/default
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker
      - aws-ecr/build_and_push_image:
          account_id: $AWS_ID
          auth:
            - aws-cli/setup:
                profile_name: OIDC-PROFILE
                role_arn: $ARN_ROLE
                region: $REGION
          create_repo: true
          profile_name: OIDC-PROFILE
          public_registry: false
          push_image: true
          region: $REGION
          repo: $REPOSITORY
          tag: $TAG
      #- aws-ecr/push-helm-chart:
      #    account_id: $AWS_ID
      #    auth:
      #      - aws-cli/setup:
      #          profile_name: OIDC-PROFILE
      #          role_arn: $ARN_ROLE
      #          region: $REGION
      #    create_repo: true
      #    profile_name: OIDC-PROFILE
      #    public_registry: false
      #    path: ./charts
      #    region: $REGION
      #    repo: $AWS_ECR_HELM_REPO_NAME
      #    tag: 1.0.0
  deploy_helm_chart:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - aws-cli/setup:
          profile_name: OIDC-PROFILE
          role_arn: $ARN_ROLE
          region: $REGION
      - run:
          name: Install eksctl
          command: curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp && sudo mv /tmp/eksctl /usr/local/bin
      - run:
          name: Install and configure kubectl
          command: curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl && kubectl version --client
      - run:
          name: Install and configure kubectl aws-iam-authenticator
          command: curl -Lo aws-iam-authenticator https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.5.9/aws-iam-authenticator_0.5.9_linux_amd64 && chmod +x ./aws-iam-authenticator && mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
      - run:
          name: Install and configure helm
          command: sudo curl -L https://get.helm.sh/helm-v3.10.1-linux-amd64.tar.gz | tar xz && sudo mv linux-amd64/helm /bin/helm && sudo rm -rf linux-amd64
      - aws-ecr/ecr_login:
          account_id: $AWS_ID
          aws_domain: 851725212434.dkr.ecr.us-east-1.amazonaws.com/devsudemo
          profile_name: OIDC-PROFILE
          public_registry: false
          region: $REGION
      - run:
          name: "cluster configs"
          command: |
            eksctl utils write-kubeconfig --cluster=$AWS_EKS_CLUSTER_NAME --region=$REGION
      - run:
          name: "helm install"
          command: bash ./scripts/deploy-node-app.sh 1.0.0 $AWS_ID.dkr.ecr.$REGION.amazonaws.com $AWS_ECR_HELM_REPO_NAME
workflows:
  build-and-test:
    jobs:
      - test
      - build-push:
          context: aws
          requires:
            - test
      - deploy_helm_chart:
          requires:
            - build-push
          
