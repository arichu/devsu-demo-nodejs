# Stacks detected: deps:node:.,test:jest:
version: 2.1
orbs:
  node: circleci/node@5
  aws-ecr: circleci/aws-ecr@9.0.2
  aws-cli: circleci/aws-cli@4.1.2
jobs:
  test:
    # Install node dependencies and run tests
    executor: node/default
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm install jest-junit
      - run:
          name: Run tests
          command: npm test -- --coverage --forceExit
      - store_test_results:
          path: ./test-results/
  build-deploy:
    # building image
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build docker image
          command: docker build . -t devsu/nodedemo:$TAG
      - run:
          name: Save image as tar
          command: |
            mkdir -p images
            docker image save -o "images/devsu-nodedemo_$TAG" "devsu/nodedemo:$TAG"
      - persist_to_workspace:
          root: .
          paths:
            - images
  push-to-aws:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Load image
          command: |
            docker image load < "images/devsu-nodedemo_$TAG"
      - aws-cli/setup:
          role-arn: $ARN_ROLE
          aws-region: $REGION
          # optional parameters
          profile-name: OIDC-PROFILE
      - run:
          name: Log-into-AWS-ECR
          command: |    
            aws ecr get-login-password --profile OIDC-PROFILE
      - aws-ecr/push_image:
          region: $REGION
          repo: $REPOSITORY
          tag: $TAG
workflows:
  build-and-test:
    jobs:
      - test
      - build-deploy:
          requires:
            - test
      - push-to-aws:
          context: aws
          requires:
            - build-deploy
          
